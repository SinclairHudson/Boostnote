{"_id":"note:qnaxJdkAAl","title":"M10: Compression","content":"# M10: Compression\n\n**Soucrce text** is the original data, over a source alphabet.\n**Coded text** is the encoded data which is transmitted, which is over the **coded alphabet**.\nUsually, the coded alphabet is simply binary.\n\nWe can judge encoding schemes on many things:\n1. Processing speed\n2. Reliability\n3. Security\n4. Size (our main objective)\n\nThere's also the **compression ratio**:\n$$\n\\frac{|C|\\log|\\Sigma_C|}{|S|\\log|\\Sigma_S|}\n$$\n\nWe need to include the logs so we don't just have massive alphabets to \"cheat\".\n\nThere are a few types of compression:\n**Logical compression** relies on the meaning of the data being known\n**physical compression** only knows the bits that we want to compress\n\n**Lossy Compression**: Better ratios, but decoding is approximate\n**Lossless Compression**: always decodes S exactly.\n\nWe'll focus on physical, lossless compression.\n\n---\n\nAnd then I got lazy and didn't take notes\n\n---\n\n## LZW algorithm\n\nobservation: Certain substrings are more frequent than others.\n\nuses dynamic dictionary, or an **adaptive encoding**.\n\nWe start with ASCII, and add to the dictionary as we go. We add one multi-character string to our alphabet at every step.\nThe dictionary is stored at a trie.\n\n![700d746e.png](700d746e-kl2t950e.png)\n\nWe limit the number of elements in the dictionary, usually to 12 bit (4096). When we hit this number, we restart.\n\n![fecaa5db.png](fecaa5db-kl2t950f.png)\n\nDecoding is a bit more tricky.\n\nWe know the starting dictionary, and the compressed string.\n\nWe basically still construct the same trie but with look-ahead.\n![aea494cf.png](aea494cf-kl2t950e.png)\n\n\nThere are a few complications, but they can be resolved by being creative and problem solving.\n\n![93c1148a.png](93c1148a-kl2t950e.png)\n\n![bcd663c7.png](bcd663c7-kl2t950e.png)\n\nThe runtime is $O(|S|)$ for encoding and decoding.\n\nThis is the encoding used in gzip and PNG, as well as GIF.\n\n---\n\n![de3bd33a.png](de3bd33a-kl2t950f.png)","tags":[],"folderPathname":"/CS240","data":{},"createdAt":"2020-07-24T00:39:11.930Z","updatedAt":"2020-07-30T17:55:02.111Z","trashed":false,"_rev":"iDMIcVWEU2"}