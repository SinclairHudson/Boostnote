{"title":"Symmetric-Key Encryption","content":"# Symmetric-Key Encryption\n\nSKES\n![](image-kjw73l7t.png)\n\nEncryption and decription share the same key.\n\n![](image-kjw7c3jp.png)\nThe important limitation here is the assumption that we have a secure channel to send the private key over. I mean yeah, I guess we could send it IRL but that's not practical.\n\nLorenz and Enigma machines used this symmetric key encryption.\n\nLorenz is responsible for building Colossus, the first electric computer.\n\n\nA simple substitution cipher (caesar cipher) is a symmetric key encryption scheme.\n\nAre they secure?\nLet's define security:\n\n1. How much compute does the enemy have?\n2. How does the adversary interact with the two communicating parties?\n3. What is the adversary's goal? (injection, deletion)\n\nA **Security model** defines the computational abilities of the enemy, and how she interacts with the communicating parties.\n\nThe general assumption is that the enemy **knows everything about the cipher, except for the key $k$**.\n\nSecurity should really only depend on the key, and not knowledge of the scheme.\n\n**Information-theoretic** security: Eve has infinite computational resources.\n\n**Complexity-theoretic** security: Eve has a polynomial-time Turing machine. (Useful in proofs, not really in practice)\n\n**Computational** security: Eve has a dummy thicc super-computer, but is computationally bounded. We use this in this course.\n\n## Aversary's interaction\nPassive attacks:\n\n1. Ciphertext-only attack: The adversary knows some ciphertext\n2. Known-plaintext attack: The adversary knows some ciphertext and the corresponding plaintext. (stronger, remember that scene from the Imitation Game)\n\nActive attacks:\n\n3. Chosen-plaintext attack: The adversary can also choose some plaintext and obtains the corresponding ciphertext. So feeding plaintext into the system, and watching ciphertext coming out.\n\nOther attacks:\n\n4. Clandestine attacks (blackmail, bribery)\n5. Side-channel attacks (timing, poweranalysis, electromagnetic analysis, etc) (Real-world)\n\n## Adversary's Goals\n\n1. Recover the secret key\n2. Systematically recover plaintext from ciphertext\n3. Learn some partial infomration about the plaintext from the ciphertext (other than length)\n\nIf 1 or 2 can be achieve, SKES is said to be **totally insecure**\nIf the adversary cannot learn even partial information about the plaintext, then SKES is said to be **semantically secure**.\n\n![](image-kjw8pe50.png)\n\n## Desirable properties of a SKES\n1. Efficient algs should be known for computing $E_k$ and $D_k$\n2. The secret key should be small\n3. The scheme should be secure, as outlined above\n4. The scheme should be secure even against the designer of the system. (did they leave a backdoor? :eyes:)\n\n\nOf course, the simple subsittution cipher is totally insecure agianst a chosen-plaintext attack. just send the whole alphabet and the ciphertext is just the key :joy:.\n\nExhaustive key search isn't really possible. It would be $26!$ keys. Not tractable.\n\nWork Factor:\n![](image-kjw94ymf.png)\n\nThe **Laundauer limit** from thermodynamics suggests that trying $2^{128}$ keys would require more than 100% of the world's energy production.\n\n![](image-kjw9a36x.png)\n\n\nFrequency analysis also completely destroys simple substitution ciphers. totally insecure.\n\n![](image-kjw9f4wz.png)\n\nAgain, chosen-plaintext attacks break the vigenere cipher (just send `aaaaaaaaaaaaaaaa` and find the key)\n\n## ChaCha20\n\n![](image-kka96xcl.png)\n\n![](image-kka98neo.png)\n\nThis Quarter Round Function is really good at mixing up the bits in a complicated way.\n\n![](image-kka9bage.png)\n\nAnd then we do the QuarterRound function in a many different ways, along columns and diagonals. This is fast though, and more secure than RC4.\n\n![](image-kka9e7pz.png)\n\n---\n\n## Block Ciphers\n\nA block cipher is a SKES that breakes up the plaintext into blocks of a fixed length, and encrypts the blocks one at a time.\n\nA stream cipher encrypts the plaintext on character at a time.\n\nData Encryption Standard (DES) is a historic example.\n\n![](image-kka9pwrn.png)\n\n![](image-kka9ytgv.png)\n\nbut NSA is big sus for reducing key size. NSA actually had the compute at the time to do exaustive key search for 56 bits, and nobody else could. They just wanted to peer inside. SMH.\n\n![](image-kkaa2sw7.png)\n\nAnd there are many more analagous to the NSA.\n\n![](image-kkaa5u9h.png)\n\nAnd DES was widely used... But evidently 56 bits for key was an issue. So begane the AES competition.\n\n![](image-kkaaabkt.png)\n\n![](image-kkaab779.png)\n\n![](image-kkaacdov.png)\n\n![](image-kkaapx1s.png)\n\nProblem 1: Small key size. You can do $2^{56}$ checks, and it's so easy to parallelize.\n\n![](image-kkaatgus.png)\n\nRemember the key lengths\n\nProblem 2: Small block size\n![](image-kkaaure8.png)\n\nBut then, how do we create a more secure block cipher, without changing the internals of DES? We already have the hardware to do DES.\n\nThe solution: Just use DES 3 times in a row LMAO. This doesn't always make a cipher more secure (freq analysis would still work, and other exploits). But the key size gets longer if you just have 3 keys.\n\n![](image-kkab70dz.png)\n\nNow, exhaustive key search is infeasable, because we have two keys acting as one.\n\nBut there's an attack!\n\n![](image-kkad76jm.png)\n\nAnd just doing the probabilities shows that a solution h_1 and h_2 is equal to k_1 and k_2 with an almost 1 probability.\n\n![](image-kkhdqfqk.png)\n\nAnd the attack has the expected number of encrypts/decrypts is $2^{57}$, which is much more efficient than an exhausitive key search. It's feasible. \nDouble-DES doesn't really offer more security than single-DES. However, the space requirement for the attack is about 1 million Terabytes. Google or the NSA could pull it off, but it wouldn't really be cost-effective. But you can make optimizations that make the alg slower but consume less space.\n\n# OH BABY A TRIPLE :joy:\n![](image-kkadoya3.png)\n\n![](image-kkadpx20.png)\n","tags":[],"folderPathname":"/CO487","data":{},"createdAt":"2021-01-13T23:38:44.893Z","updatedAt":"2021-01-28T21:38:45.211Z","trashed":false,"_id":"note:2EOrGJw7N","_rev":"145-90ed374e5fc94c88407f8d51b561d513"}