{"title":"WATORACE stack design","content":"\n```python\n\n# ego_driver.cpp\nstd::vector<std::pair<double, double> waypoints = ...;\nMPC controller(waypoints);\nStanley controller();\n\nOptimizer(waypoints);\n\nwhile (true){  # main loop\n    stateStruct s = getData(); # wait for and get data from the simulator\n    # ros.visualize(s);\n    (steering angle, gas pedal) = controller.tick(s);\n    \n    time = lapTimer.check_lap(s);\n    new_waypoints = optimizer.step(time);\n    controller.update(new_waypoints);\n    sendData(steering angle, gas pedal);\n    \n}\n# ego_driver.cpp ends\n\n# NEW FILE stateStruct.hpp\n\n\n# stateStruct might change if we turn of sensors in the simulator\nstateStruct getData(){\n    \n    stateStruct current();  # default params are flags for \"not filled\"\n    while not dds_done{\n        current.populate = ...\n    }\n    \n    return current;\n}\n\n\n# controller.cpp\nabstract class Controller{\n    \n    virtual (steering angle, gas pedal) tick(stateStruct &s){\n        \n        updateState();\n        computeControl();\n        convertToSteeringAngle();\n        \n    }\n}\n\n# spline_MPC_controller.cpp\nclass spline_MPC extends Controller{\n    \n    private splines;\n    \n    # override tick()\n    \n}\n    \n    \n```\n\n:::tip I am a tip\ntesterino\n:::\n\n:::caution I am a tip\ntesterino\n:::\n\n:::danger I am a tip\ntesterino\n:::\n\n:::info I am a tip\ntesterino\n:::\n\n:::warning bruh\nHello\n:::\n\n:::note bruh\nHello\n:::\n\n:::abstract bruh\nHello\n:::\n\n:::error hello\nNo\n:::","tags":[],"folderPathname":"/","data":{},"createdAt":"2021-01-24T19:32:12.914Z","updatedAt":"2021-02-17T02:22:39.122Z","trashed":false,"_id":"note:NxwPPHb0v","_rev":"nyEh26K5M"}